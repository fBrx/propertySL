/*
* generated by Xtext
*/
package com.github.fbrx.propertysl.ui.quickfix

import com.github.fbrx.propertysl.propertySL.ComplexPropertyValue
import com.github.fbrx.propertysl.propertySL.Package
import com.github.fbrx.propertysl.propertySL.PropertySLFactory
import com.github.fbrx.propertysl.propertySL.SupportedLocales
import com.github.fbrx.propertysl.validation.PropertySLValidator
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.validation.Issue

/**
 * Custom quickfixes.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
class PropertySLQuickfixProvider extends DefaultQuickfixProvider {

	@Fix(PropertySLValidator.LOCALE_NOT_SUPPORTED)
	def removeUnsupportedLocaleItem(Issue issue, IssueResolutionAcceptor ira){
		ira.accept(issue, 'Remove unsupported entry', 'Remove unsupported locale entry from property definition.', 'minus.png', [element, context |
			val cpv = element.eContainer as ComplexPropertyValue
			cpv.items.remove(element)
		]) 
	}
	
	@Fix(PropertySLValidator.LOCALE_NOT_SUPPORTED)
	def addSupportedLocale(Issue issue, IssueResolutionAcceptor ira){
		ira.accept(issue, 'Add supported locale definition', 'Add entry to the list of supported locales.', 'plus.png', [element, context |
			var newDl = PropertySLFactory.eINSTANCE.createDefaultableLocale
			newDl.setIsDefault(false)
			newDl.setLang(issue.data.get(0))
			
			val pkg = element.eContainer.eContainer.eContainer as Package
			pkg.supportedLocales.locales.add(newDl)
		]) 
	}
	
	@Fix(PropertySLValidator.MISSING_LOCALE_DEFINITION)
	def addSupportedLocaleItem(Issue issue, IssueResolutionAcceptor ira){
		ira.accept(issue, 'Add locale entry for "' + issue.data.get(0) + '"', 'Add a locale entry to the property definition.', 'plus.png', [element, context |
			val cpv = element as ComplexPropertyValue
			
			var newCpvi = PropertySLFactory.eINSTANCE.createComplexPropertyValueItem
			var newSpv = PropertySLFactory.eINSTANCE.createSimplePropertyValue
			newSpv.setValue("")
			newCpvi.setLang(issue.data.get(0))
			newCpvi.setValue(newSpv)			
			
			cpv.items.add(newCpvi)
		])
	}
	
	@Fix(PropertySLValidator.MISSING_LOCALE_DEFINITION)
	def removeSupportedLocale(Issue issue, IssueResolutionAcceptor ira){
		ira.accept(issue, 'Remove supported locale definition for ' + issue.data.get(0), 'Remove entry '+ issue.data.get(0) +' from the list of supported locales.', 'minus.png', [element, context |
			val pkg = element.eContainer.eContainer as Package
			pkg.supportedLocales.locales.removeAll(pkg.supportedLocales.locales.filter[it.lang.equals(issue.data.get(0))])
		]) 
	}
	
	@Fix(PropertySLValidator.DEFAULT_LOCALE_NOT_SET)
	def addDefaultLocaleDefinition(Issue issue, IssueResolutionAcceptor ira){
		for(String l : issue.data){
			ira.accept(issue, "Make locale \""+ l +"\" the default.", 'Make locale \""+ l +"\" the default locale.', 'minus.png', [element, context |
				val sl = element as SupportedLocales
				sl.locales.filter[it.lang.equals(l)].head.setIsDefault(true)
			])			
		}
	}
}
