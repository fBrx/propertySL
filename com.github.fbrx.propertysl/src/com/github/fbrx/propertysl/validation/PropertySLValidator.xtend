/*
 * generated by Xtext
 */
package com.github.fbrx.propertysl.validation

import com.github.fbrx.propertysl.propertySL.Package
import com.github.fbrx.propertysl.propertySL.PropertySLPackage
import org.eclipse.xtext.validation.Check
import com.github.fbrx.propertysl.propertySL.ComplexPropertyValueItem
import com.github.fbrx.propertysl.propertySL.ComplexPropertyValue
import java.util.ArrayList

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class PropertySLValidator extends AbstractPropertySLValidator {


	public static final String MISSING_LOCALES = "MISSING_LOCALES"
	public static final String UNDEFINED_LOCALE = "UNDEFINED_LOCALE"
	
	@Check
	def checkIfDefaultLocaleIsSupported(Package pkg){
		if(pkg.defaultLocale != null){
			if(pkg.supportedLocales != null){
				if(!pkg.supportedLocales.locales.contains(pkg.defaultLocale.lang)){
					error("default locale must be one of supported locales", PropertySLPackage.Literals.PACKAGE__DEFAULT_LOCALE);
				}
			}else{
				warning("supported locales are not defined", PropertySLPackage.Literals.PACKAGE__DEFAULT_LOCALE)
			}
		}
	}
	
	@Check
	def checkLocaleOfComplexPropertyValue(ComplexPropertyValueItem item){
		val pkg = item.eContainer.eContainer.eContainer as Package
		if(!pkg.supportedLocales.locales.contains(item.lang)){
			warning("locale is not defined: " + item.lang, PropertySLPackage.Literals.COMPLEX_PROPERTY_VALUE_ITEM__LANG, UNDEFINED_LOCALE, item.lang)
		}
	}
	
	@Check
	def checkItemsOfComplexPropertyValue(ComplexPropertyValue prop){
		val pkg = prop.eContainer.eContainer as Package
		var languages = new ArrayList<String>;
		
		for(ComplexPropertyValueItem item : prop.items){
			languages.add(item.lang)
		}

		var tmp = new ArrayList(pkg.supportedLocales.locales)
		tmp.removeAll(languages)
		if(tmp.size > 0){
			for(String s : tmp){
				error("missing locale definition (" + s + ")", PropertySLPackage.Literals.COMPLEX_PROPERTY_VALUE__ITEMS, MISSING_LOCALES, s)
			}
			
		}
	}
	
}
